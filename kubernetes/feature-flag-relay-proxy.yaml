apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "7000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: relay-proxy
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        env:
        - name: PROXY_KEY
          value: {{ .Values.proxyKey }}
        - name: READ_REPLICA
          value: false
        - name: AUTH_SECRET
          value: {{ .Values.authSecret }}
        - name: REDIS_ADDRESS
          value: {{ .Values.redisAddress }}
        - name: LOG_LEVEL
          value: {{ .Values.logLevel }}
        ports:
        - name: sdk
          containerPort: 7000
        
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app }}-read-replica
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app }}-read-replica
  template:
    metadata:
      labels:
        app: {{ .Values.app }}-read-replica
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "7000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: relay-proxy-read-replica
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        env:
        - name: READ_REPLICA
          value: true
        - name: AUTH_SECRET
          value: {{ .Values.authSecret }}
        - name: REDIS_ADDRESS
          value: {{ .Values.redisAddress }}
        - name: LOG_LEVEL
          value: {{ .Values.logLevel }}
        ports:
        - name: sdk
          containerPort: 7000

{{ if .Values.service.enableWriterService }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.service.type }}
  selector:
    app: {{ .Values.app }}
  ports:
  - name: sdk
    port: {{ .Values.service.port }}
    targetPort: sdk
{{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app }}-read-replica
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.service.type }}
  selector:
    app: {{ .Values.app }}-read-replica
  ports:
  - name: sdk
    port: {{ .Values.service.port }}
    targetPort: sdk
